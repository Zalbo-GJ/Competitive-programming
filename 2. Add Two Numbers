# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:
        p1 = l1
        p2 = l2
        ans = ListNode(0)
        curr = ans
        carry = 0
        summ = 0
        while p1 or p2:
            num1 = 0
            num2 = 0
            summ = 0
            
            if  p1:
                num1 = p1.val
                p1 = p1.next
            if p2:
                num2 = p2.val
                p2 = p2.next
                
            if carry + num1 + num2 >9:
                carry, summ = map(int,str(num1+num2+carry))
            else:
                summ = num1 + num2 + carry
                carry = 0
            curr.next = ListNode(summ)
            curr = curr.next
            
        if carry:
            curr.next = ListNode(carry)
            
        
        return ans.next
            
                
                
